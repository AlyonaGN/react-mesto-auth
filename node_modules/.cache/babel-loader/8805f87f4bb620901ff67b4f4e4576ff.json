{"ast":null,"code":"var _jsxFileName = \"/Users/alyona/Docs/Praktikum-Projects/mesto-react/src/components/EditProfilePopup.js\";\nimport React, { useCallback } from 'react';\nimport PopupWithForm from './PopupWithForm.js';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js';\nimport { editProfileValidators } from '../utils/editProfileValidators.js';\n\nfunction EditProfilePopup({\n  isOpen,\n  onClose,\n  onUpdateUser\n}) {\n  const [formValues, setFormValues] = React.useState({\n    userName: \"\",\n    profileDescription: \"\"\n  });\n  const handleInputChange = useCallback(e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormValues(prevState => ({ ...prevState,\n      [name]: value\n    }));\n  }, [setFormValues]);\n  const currentUserData = React.useContext(CurrentUserContext);\n  const handleSubmit = useCallback(e => {\n    e.preventDefault();\n    onUpdateUser({\n      name: formValues.userName,\n      about: formValues.profileDescription\n    });\n  }, [onUpdateUser, formValues]);\n  const [errors, setErrors] = React.useState({\n    userNameErrors: {\n      required: false,\n      minLength: false,\n      maxLength: false\n    },\n    profileDescriptionErrors: {\n      required: false,\n      minLength: false,\n      maxLength: false\n    }\n  });\n  React.useEffect(() => {\n    if (currentUserData) {\n      setFormValues({\n        userName: currentUserData.name,\n        profileDescription: currentUserData.about\n      });\n    }\n  }, [currentUserData]);\n  React.useEffect(e => {\n    const userNameValidationResult = formsValidator.validateEditProfileNameInput();\n    setErrors({\n      userNameErrors: userNameValidationResult\n    });\n  }, [formValues.userName, setErrors]);\n  React.useEffect(e => {\n    setErrors({\n      userNameErrors: userNameValidationResult\n    });\n  }, [formValues.userName, setErrors]);\n  return /*#__PURE__*/React.createElement(PopupWithForm, {\n    title: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044C\",\n    name: \"profile\",\n    isOpen: isOpen,\n    onClose: onClose,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"popup__input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"popup__field popup__field_name\",\n    value: formValues.userName,\n    onChange: handleInputChange,\n    type: \"text\",\n    name: \"userName\",\n    placeholder: \"\\u0418\\u043C\\u044F\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"popup__field-error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"popup__input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"popup__field popup__field_description\",\n    value: formValues.profileDescription,\n    onChange: handleInputChange,\n    type: \"text\",\n    name: \"profileDescription\",\n    placeholder: \"\\u041E \\u0441\\u0435\\u0431\\u0435\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"popup__field-error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"popup__submit-button\",\n    onClick: handleSubmit,\n    name: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"));\n}\n\nexport default EditProfilePopup;","map":{"version":3,"sources":["/Users/alyona/Docs/Praktikum-Projects/mesto-react/src/components/EditProfilePopup.js"],"names":["React","useCallback","PopupWithForm","CurrentUserContext","editProfileValidators","EditProfilePopup","isOpen","onClose","onUpdateUser","formValues","setFormValues","useState","userName","profileDescription","handleInputChange","e","name","value","target","prevState","currentUserData","useContext","handleSubmit","preventDefault","about","errors","setErrors","userNameErrors","required","minLength","maxLength","profileDescriptionErrors","useEffect","userNameValidationResult","formsValidator","validateEditProfileNameInput"],"mappings":"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","sourcesContent":["import React, { useCallback } from 'react';\nimport PopupWithForm from './PopupWithForm.js';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js';\nimport { editProfileValidators } from '../utils/editProfileValidators.js';\n\nfunction EditProfilePopup({isOpen, onClose, onUpdateUser}) {\n\n    const [formValues, setFormValues] = React.useState({\n        userName: \"\",\n        profileDescription: \"\"\n    });\n\n    const handleInputChange = useCallback((e) => {\n        const { name, value } = e.target;\n        setFormValues((prevState) => ({...prevState, [name]: value}));\n    }, [setFormValues]);\n\n    const currentUserData = React.useContext(CurrentUserContext);\n\n    const handleSubmit = useCallback((e) => {\n        e.preventDefault();\n        onUpdateUser({\n            name: formValues.userName,\n            about: formValues.profileDescription,\n        });\n    }, [onUpdateUser, formValues]);\n\n    const [errors, setErrors] = React.useState({\n        userNameErrors: {\n            required: false,\n            minLength: false,\n            maxLength: false\n        },\n        profileDescriptionErrors: {\n            required: false,\n            minLength: false,\n            maxLength: false\n        }\n    });\n\n    React.useEffect(() => {\n        if (currentUserData) {\n            setFormValues({\n                userName: currentUserData.name,\n                profileDescription: currentUserData.about});\n        }\n    }, [currentUserData]);\n    \n    React.useEffect((e) => {\n        \n        const userNameValidationResult = formsValidator.validateEditProfileNameInput()\n\n        setErrors({\n            userNameErrors: userNameValidationResult,\n        });\n    }, [formValues.userName, setErrors]);\n\n    React.useEffect((e) => {\n        \n\n        setErrors({\n            userNameErrors: userNameValidationResult,\n        });\n    }, [formValues.userName, setErrors]);\n \n    return (\n        <PopupWithForm title=\"Редактировать профиль\" name=\"profile\" isOpen={isOpen} onClose={onClose} onSubmit={handleSubmit} >\n        <label className=\"popup__input\">\n          <input className=\"popup__field popup__field_name\" value={formValues.userName} onChange={handleInputChange} type=\"text\" name=\"userName\" placeholder=\"Имя\" />\n          <span className=\"popup__field-error\"></span>\n        </label>\n\n        <label className=\"popup__input\">\n          <input className=\"popup__field popup__field_description\" value={formValues.profileDescription} onChange={handleInputChange} type=\"text\" name=\"profileDescription\" placeholder=\"О себе\" />\n          <span className=\"popup__field-error\"></span>\n        </label>\n\n        <button type=\"submit\" className=\"popup__submit-button\" onClick={handleSubmit} name=\"Сохранить\">Сохранить</button>\n      </PopupWithForm>\n    );\n\n}\n\nexport default EditProfilePopup;"]},"metadata":{},"sourceType":"module"}