{"ast":null,"code":"var _jsxFileName = \"/Users/alyona/Docs/Praktikum-Projects/mesto-auth/src/components/Register.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback } from 'react';\nimport AuthirizationPage from './AuthirizationPage.js';\n\nfunction Register({\n  onUpdateAuthForm\n}) {\n  _s();\n\n  const [formValues, setFormValues] = React.useState({\n    email: \"\",\n    password: \"\"\n  });\n  const handleSubmit = useCallback(e => {\n    e.preventDefault();\n    /* onUpdateAuthForm({\n        email: formValues.userEmail,\n        about: formValues.userPassword,\n    }); */\n  }, [onUpdateAuthForm, formValues]);\n  const handleInputChange = useCallback(e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormValues(prevState => ({ ...prevState,\n      [name]: value\n    }));\n  }, [setFormValues]);\n  return /*#__PURE__*/React.createElement(AuthirizationPage, {\n    title: \"\\u0420\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u044F\",\n    name: \"signup\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"authorization__input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"authorization__field authorization__field_email\",\n    value: formValues.userEmail,\n    onChange: handleInputChange,\n    type: \"text\",\n    name: \"userEmail\",\n    placeholder: \"Email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"authorization__input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"authorization__field authorization__field_password\",\n    value: formValues.userPassword,\n    onChange: handleInputChange,\n    type: \"text\",\n    name: \"userPassword\",\n    placeholder: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"authorization__submit-button\",\n    onClick: handleSubmit,\n    name: \"\\u0417\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\\u0441\\u044F\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, \"\\u0417\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\\u0441\\u044F\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"authorization__question-on-registration\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, \"\\u0423\\u0436\\u0435 \\u0437\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u044B?\", /*#__PURE__*/React.createElement(\"a\", {\n    className: \"authorization__login-ref\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 88\n    }\n  }, \"\\u0412\\u043E\\u0439\\u0442\\u0438\")));\n}\n\n_s(Register, \"OYOA4w7/wQM9O07vwWDPbJJh2IE=\");\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/alyona/Docs/Praktikum-Projects/mesto-auth/src/components/Register.js"],"names":["React","useCallback","AuthirizationPage","Register","onUpdateAuthForm","formValues","setFormValues","useState","email","password","handleSubmit","e","preventDefault","handleInputChange","name","value","target","prevState","userEmail","userPassword"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,OAAOC,iBAAP,MAA8B,wBAA9B;;AAEA,SAASC,QAAT,CAAkB;AAACC,EAAAA;AAAD,CAAlB,EAAsC;AAAA;;AAElC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BN,KAAK,CAACO,QAAN,CAAe;AAC/CC,IAAAA,KAAK,EAAE,EADwC;AAE/CC,IAAAA,QAAQ,EAAE;AAFqC,GAAf,CAApC;AAKA,QAAMC,YAAY,GAAGT,WAAW,CAAEU,CAAD,IAAO;AACpCA,IAAAA,CAAC,CAACC,cAAF;AACA;AACR;AACA;AACA;AACK,GAN+B,EAM7B,CAACR,gBAAD,EAAmBC,UAAnB,CAN6B,CAAhC;AAQA,QAAMQ,iBAAiB,GAAGZ,WAAW,CAAEU,CAAD,IAAO;AACzC,UAAM;AAAEG,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBJ,CAAC,CAACK,MAA1B;AACAV,IAAAA,aAAa,CAAEW,SAAD,KAAgB,EAAE,GAAGA,SAAL;AAAgB,OAACH,IAAD,GAAQC;AAAxB,KAAhB,CAAD,CAAb;AACH,GAHoC,EAGlC,CAACT,aAAD,CAHkC,CAArC;AAKA,sBACI,oBAAC,iBAAD;AAAmB,IAAA,KAAK,EAAC,oEAAzB;AAAuC,IAAA,IAAI,EAAC,QAA5C;AAAqD,IAAA,QAAQ,EAAEI,YAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAO,IAAA,SAAS,EAAC,sBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,SAAS,EAAC,iDAAjB;AAAmE,IAAA,KAAK,EAAEL,UAAU,CAACa,SAArF;AAAgG,IAAA,QAAQ,EAAEL,iBAA1G;AAA6H,IAAA,IAAI,EAAC,MAAlI;AAAyI,IAAA,IAAI,EAAC,WAA9I;AAA0J,IAAA,WAAW,EAAC,OAAtK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADA,eAKA;AAAO,IAAA,SAAS,EAAC,sBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,SAAS,EAAC,oDAAjB;AAAsE,IAAA,KAAK,EAAER,UAAU,CAACc,YAAxF;AAAsG,IAAA,QAAQ,EAAEN,iBAAhH;AAAmI,IAAA,IAAI,EAAC,MAAxI;AAA+I,IAAA,IAAI,EAAC,cAApJ;AAAmK,IAAA,WAAW,EAAC,sCAA/K;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CALA,eASA;AAAQ,IAAA,SAAS,EAAC,8BAAlB;AAAiD,IAAA,OAAO,EAAEH,YAA1D;AAAwE,IAAA,IAAI,EAAC,8GAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oHATA,eAUA;AAAM,IAAA,SAAS,EAAC,yCAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0IAA+E;AAAG,IAAA,SAAS,EAAC,0BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAA/E,CAVA,CADJ;AAeH;;GAnCQP,Q;;KAAAA,Q;AAqCT,eAAeA,QAAf","sourcesContent":["import React, { useCallback } from 'react';\nimport AuthirizationPage from './AuthirizationPage.js';\n\nfunction Register({onUpdateAuthForm}) {\n\n    const [formValues, setFormValues] = React.useState({\n        email: \"\",\n        password: \"\"\n    });\n\n    const handleSubmit = useCallback((e) => {\n        e.preventDefault();\n        /* onUpdateAuthForm({\n            email: formValues.userEmail,\n            about: formValues.userPassword,\n        }); */\n    }, [onUpdateAuthForm, formValues]);\n\n    const handleInputChange = useCallback((e) => {\n        const { name, value } = e.target;\n        setFormValues((prevState) => ({ ...prevState, [name]: value }));\n    }, [setFormValues]);\n\n    return (\n        <AuthirizationPage title=\"Регистрация\" name=\"signup\" onSubmit={handleSubmit} >\n        <label className=\"authorization__input\">\n          <input className=\"authorization__field authorization__field_email\" value={formValues.userEmail} onChange={handleInputChange} type=\"text\" name=\"userEmail\" placeholder=\"Email\" />\n        </label>\n\n        <label className=\"authorization__input\">\n          <input className=\"authorization__field authorization__field_password\" value={formValues.userPassword} onChange={handleInputChange} type=\"text\" name=\"userPassword\" placeholder=\"Пароль\" />\n        </label>\n\n        <button className=\"authorization__submit-button\" onClick={handleSubmit} name=\"Зарегистрироваться\">Зарегистрироваться</button>\n        <span className=\"authorization__question-on-registration\">Уже зарегистрированы?<a className=\"authorization__login-ref\">Войти</a></span>\n      </AuthirizationPage>\n    );\n\n}\n\nexport default Register;"]},"metadata":{},"sourceType":"module"}