{"ast":null,"code":"var _jsxFileName = \"/Users/alyona/Docs/Praktikum-Projects/mesto-react/src/components/Main.js\";\nimport React from 'react';\nimport { api } from '../utils/Api.js';\nimport Card from './Card.js';\n\nfunction Main(props) {\n  const [userName, setUserName] = React.useState('');\n  const [userDescription, setUserDescription] = React.useState('');\n  const [userAvatar, setUserAvatar] = React.useState('');\n  const [cards, setCards] = React.useState([]);\n  api.loadAppInfo().then(([initialCards, userData]) => {\n    React.useEffect(() => {\n      setUserName(userData.name);\n      setUserDescription(userData.about);\n      setUserAvatar(userData.avatar);\n      const cardsFromServer = initialCards.map(card => ({\n        src: card.link,\n        alt: card.name,\n        description: card.name,\n        likesAmount: card.likes.length,\n        id: card._id\n      }));\n      setCards(cardsFromServer);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []).catch(error => {\n    console.log(error);\n  });\n  /*   React.useEffect(() => {\n      api.getUserData().\n        then((userData) => {\n          setUserName(userData.name);\n          setUserDescription(userData.about);\n          setUserAvatar(userData.avatar);\n        }).\n        catch((error) => {\n          console.log(error);\n      })\n    }, []);\n    \n    React.useEffect(() => {\n      api.getInitialCards().\n        then((initialCards) => {\n          const cardsFromServer = initialCards.map(card => ({\n            src: card.link,\n            alt: card.name,\n            description: card.name,\n            likesAmount: card.likes.length,\n            id: card._id,\n          }))\n          setCards(cardsFromServer);\n        }).\n        catch((error) => {\n          console.log(error);\n        })\n    }, []); */\n\n  return /*#__PURE__*/React.createElement(\"main\", {\n    className: \"content-container page__content-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    className: \"profile content-container__profile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile__avatar-overlay\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"profile__avatar\",\n    alt: \"\\u0437\\u0434\\u0435\\u0441\\u044C \\u0434\\u043E\\u043B\\u0436\\u043D\\u043E \\u0431\\u044B\\u0442\\u044C \\u0444\\u043E\\u0442\\u043E \\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044F, \\u043D\\u043E \\u0447\\u0442\\u043E-\\u0442\\u043E \\u043F\\u043E\\u0448\\u043B\\u043E \\u043D\\u0435 \\u0442\\u0430\\u043A\",\n    src: userAvatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"profile__avatar-change-button\",\n    onClick: props.onEditAvatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile__info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile__name-and-button-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"profile__name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 15\n    }\n  }, userName), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"profile__edit-button\",\n    onClick: props.onEditProfile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"profile__description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, userDescription)), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"profile__add-button\",\n    onClick: props.onAddPlace,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"photo-cards\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"photo-cards__list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, cards.map(card => /*#__PURE__*/React.createElement(Card, {\n    key: card.id,\n    card: card,\n    onCardClick: props.onCardClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 32\n    }\n  })))));\n}\n\nexport default Main;","map":{"version":3,"sources":["/Users/alyona/Docs/Praktikum-Projects/mesto-react/src/components/Main.js"],"names":["React","api","Card","Main","props","userName","setUserName","useState","userDescription","setUserDescription","userAvatar","setUserAvatar","cards","setCards","loadAppInfo","then","initialCards","userData","useEffect","name","about","avatar","cardsFromServer","map","card","src","link","alt","description","likesAmount","likes","length","id","_id","catch","error","console","log","onEditAvatar","onEditProfile","onAddPlace","onCardClick"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { api } from '../utils/Api.js';\nimport Card from './Card.js';\n\nfunction Main(props) {\n  const [userName, setUserName] = React.useState('');\n  const [userDescription, setUserDescription] = React.useState('');\n  const [userAvatar, setUserAvatar] = React.useState('');\n  const [cards, setCards] = React.useState([]);\n\n  api.loadAppInfo()\n    .then(([initialCards, userData]) => {\n      React.useEffect(() => {\n        setUserName(userData.name);\n        setUserDescription(userData.about);\n        setUserAvatar(userData.avatar);\n\n        const cardsFromServer = initialCards.map(card => ({\n          src: card.link,\n          alt: card.name,\n          description: card.name,\n          likesAmount: card.likes.length,\n          id: card._id,\n        }))\n        setCards(cardsFromServer);\n      }).\n        catch((error) => {\n          console.log(error);\n        })\n    }, [])\n    .catch((error) => {\n      console.log(error);\n    });\n\n/*   React.useEffect(() => {\n    api.getUserData().\n      then((userData) => {\n        setUserName(userData.name);\n        setUserDescription(userData.about);\n        setUserAvatar(userData.avatar);\n      }).\n      catch((error) => {\n        console.log(error);\n    })\n  }, []);\n  \n  React.useEffect(() => {\n    api.getInitialCards().\n      then((initialCards) => {\n        const cardsFromServer = initialCards.map(card => ({\n          src: card.link,\n          alt: card.name,\n          description: card.name,\n          likesAmount: card.likes.length,\n          id: card._id,\n        }))\n        setCards(cardsFromServer);\n      }).\n      catch((error) => {\n        console.log(error);\n      })\n  }, []); */\n\n  return (\n    <main className=\"content-container page__content-container\">\n        <section className=\"profile content-container__profile\">\n          \n          <div className=\"profile__avatar-overlay\">\n            <img className=\"profile__avatar\" alt=\"здесь должно быть фото профиля, но что-то пошло не так\" src={userAvatar}/>\n            <button type=\"button\" className=\"profile__avatar-change-button\" onClick={props.onEditAvatar}></button>\n          </div>\n          \n          <div className=\"profile__info\">\n            <div className=\"profile__name-and-button-container\">\n              <h1 className=\"profile__name\">{userName}</h1>\n              <button type=\"button\" className=\"profile__edit-button\" onClick={props.onEditProfile}></button>\n            </div>\n            <p className=\"profile__description\">{userDescription}</p>\n          </div>\n          \n          <button type=\"button\" className=\"profile__add-button\" onClick={props.onAddPlace}></button>\n        \n        </section>\n\n        <section className=\"photo-cards\">\n          \n          <ul className=\"photo-cards__list\">\n            {cards.map(card => <Card key={card.id} card={card} onCardClick={props.onCardClick} />)}\n          </ul>\n          \n        </section>\n      </main>\n  );\n}\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}