{"ast":null,"code":"var _jsxFileName = \"/Users/alyona/Docs/Praktikum-Projects/mesto-react/src/components/EditProfilePopup.js\";\nimport React, { useCallback } from 'react';\nimport PopupWithForm from './PopupWithForm.js';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js';\nimport { formsValidator } from './FormsValidator.js';\n\nfunction EditProfilePopup({\n  isOpen,\n  onClose,\n  onUpdateUser\n}) {\n  const [formValues, setFormValues] = React.useState({\n    userName: \"\",\n    profileDescription: \"\"\n  });\n  const [errors, setErrors] = React.useState({\n    userNameErrors: {\n      required: false,\n      minLength: false,\n      maxLength: false\n    },\n    profileDescriptionErrors: {\n      required: true,\n      minLength: true,\n      maxLength: true\n    }\n  });\n  const currentUserData = React.useContext(CurrentUserContext);\n  const handleSubmit = useCallback(e => {\n    e.preventDefault();\n    onUpdateUser({\n      name: formValues.userName,\n      about: formValues.profileDescription\n    });\n  }, [onUpdateUser, formValues]);\n  React.useEffect(() => {\n    console.log(errors);\n\n    if (currentUserData) {\n      setFormValues({\n        userName: currentUserData.name,\n        profileDescription: currentUserData.about\n      });\n    }\n  }, [currentUserData]);\n  const handleNameChange = useCallback(e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormValues(prevState => ({ ...prevState,\n      [name]: value\n    }));\n    const userNameValidationResult = formsValidator.validateEditProfileNameInput(value);\n    console.log(userNameValidationResult);\n    setErrors(prevState => ({ ...prevState,\n      userNameErrors: userNameValidationResult\n    }));\n  }, [setFormValues, setErrors]);\n  const handleDescriptionChange = useCallback(e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormValues(prevState => ({ ...prevState,\n      [name]: value\n    }));\n    const profileDescriptionValidationResult = formsValidator.validateEditProfileDescriptionInput(value);\n    setErrors(prevState => ({ ...prevState,\n      profileDescriptionErrors: profileDescriptionValidationResult\n    }));\n  }, [setFormValues, setErrors]);\n  const isUserNameInvalid = Object.values(errors.userNameErrors).some(Boolean);\n  const isDescriptionInvalid = Object.values(errors.profileDescriptionErrors).some(Boolean);\n  const isSubmitDisabled = isUserNameInvalid || isDescriptionInvalid;\n  return /*#__PURE__*/React.createElement(PopupWithForm, {\n    title: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044C\",\n    name: \"profile\",\n    isOpen: isOpen,\n    onClose: onClose,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"popup__input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"popup__field popup__field_name\",\n    value: formValues.userName,\n    onChange: handleNameChange,\n    type: \"text\",\n    name: \"userName\",\n    placeholder: \"\\u0418\\u043C\\u044F\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }), errors.userNameErrors.required && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"popup__field-error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 46\n    }\n  }, \"\\u041F\\u043E\\u0436\\u0430\\u043B\\u0443\\u0439\\u0441\\u0442\\u0430, \\u0437\\u0430\\u043F\\u043E\\u043B\\u043D\\u0438\\u0442\\u0435 \\u043F\\u043E\\u043B\\u0435\"), errors.userNameErrors.minLength && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"popup__field-error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 47\n    }\n  }, \"\\u041C\\u0438\\u043D\\u0438\\u043C\\u0430\\u043B\\u044C\\u043D\\u0430\\u044F \\u0434\\u043B\\u0438\\u043D\\u0430 \\u0438\\u043C\\u0435\\u043D\\u0438 - 2 \\u0441\\u0438\\u043C\\u0432\\u043E\\u043B\\u0430\"), errors.userNameErrors.maxLength && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"popup__field-error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 47\n    }\n  }, \"\\u041C\\u0430\\u043A\\u0441\\u0438\\u043C\\u0430\\u043B\\u044C\\u043D\\u0430\\u044F \\u0434\\u043B\\u0438\\u043D\\u0430 \\u0438\\u043C\\u0435\\u043D\\u0438 - 40 \\u0441\\u0438\\u043C\\u0432\\u043E\\u043B\\u043E\\u0432\")), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"popup__input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"popup__field popup__field_description\",\n    value: formValues.profileDescription,\n    onChange: handleDescriptionChange,\n    type: \"text\",\n    name: \"profileDescription\",\n    placeholder: \"\\u041E \\u0441\\u0435\\u0431\\u0435\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }), errors.profileDescriptionErrors.required && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"popup__field-error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 56\n    }\n  }, \"\\u041F\\u043E\\u0436\\u0430\\u043B\\u0443\\u0439\\u0441\\u0442\\u0430, \\u0437\\u0430\\u043F\\u043E\\u043B\\u043D\\u0438\\u0442\\u0435 \\u043F\\u043E\\u043B\\u0435\"), errors.profileDescriptionErrors.minLength && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"popup__field-error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 57\n    }\n  }, \"\\u041C\\u0438\\u043D\\u0438\\u043C\\u0430\\u043B\\u044C\\u043D\\u0430\\u044F \\u0434\\u043B\\u0438\\u043D\\u0430 \\u043E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u044F - 2 \\u0441\\u0438\\u043C\\u0432\\u043E\\u043B\\u0430\"), errors.profileDescriptionErrors.maxLength && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"popup__field-error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 57\n    }\n  }, \"\\u041C\\u0430\\u043A\\u0441\\u0438\\u043C\\u0430\\u043B\\u044C\\u043D\\u0430\\u044F \\u0434\\u043B\\u0438\\u043D\\u0430 \\u043E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u044F - 200 \\u0441\\u0438\\u043C\\u0432\\u043E\\u043B\\u043E\\u0432\")), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    disabled: isSubmitDisabled,\n    className: \"popup__submit-button\",\n    onClick: handleSubmit,\n    name: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"));\n}\n\nexport default EditProfilePopup;","map":{"version":3,"sources":["/Users/alyona/Docs/Praktikum-Projects/mesto-react/src/components/EditProfilePopup.js"],"names":["React","useCallback","PopupWithForm","CurrentUserContext","formsValidator","EditProfilePopup","isOpen","onClose","onUpdateUser","formValues","setFormValues","useState","userName","profileDescription","errors","setErrors","userNameErrors","required","minLength","maxLength","profileDescriptionErrors","currentUserData","useContext","handleSubmit","e","preventDefault","name","about","useEffect","console","log","handleNameChange","value","target","prevState","userNameValidationResult","validateEditProfileNameInput","handleDescriptionChange","profileDescriptionValidationResult","validateEditProfileDescriptionInput","isUserNameInvalid","Object","values","some","Boolean","isDescriptionInvalid","isSubmitDisabled"],"mappings":"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","sourcesContent":["import React, { useCallback } from 'react';\nimport PopupWithForm from './PopupWithForm.js';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js';\nimport { formsValidator } from './FormsValidator.js';\n\nfunction EditProfilePopup({isOpen, onClose, onUpdateUser}) {\n\n    const [formValues, setFormValues] = React.useState({\n        userName: \"\",\n        profileDescription: \"\"\n    });\n\n    const [errors, setErrors] = React.useState({\n        userNameErrors: {\n            required: false,\n            minLength: false,\n            maxLength: false,\n        },\n        profileDescriptionErrors: {\n            required: true,\n            minLength: true,\n            maxLength: true,\n        }\n    });\n\n    const currentUserData = React.useContext(CurrentUserContext);\n\n    const handleSubmit = useCallback((e) => {\n        e.preventDefault();\n        onUpdateUser({\n            name: formValues.userName,\n            about: formValues.profileDescription,\n        });\n    }, [onUpdateUser, formValues]);\n\n    React.useEffect(() => {\n        console.log(errors);\n        if (currentUserData) {\n            setFormValues({\n                userName: currentUserData.name,\n                profileDescription: currentUserData.about});\n        }\n    }, [currentUserData]);\n\n    const handleNameChange = useCallback((e) => {\n        const { name, value } = e.target;\n        setFormValues((prevState) => ({ ...prevState, [name]: value }));\n        const userNameValidationResult = formsValidator.validateEditProfileNameInput(value);\n        console.log(userNameValidationResult);\n        setErrors((prevState) => ({...prevState, \n            userNameErrors: userNameValidationResult,\n        }));\n    }, [setFormValues, setErrors]);\n\n    const handleDescriptionChange = useCallback((e) => {\n        const { name, value } = e.target;\n        setFormValues((prevState) => ({...prevState, [name]: value}));\n        const profileDescriptionValidationResult = formsValidator.validateEditProfileDescriptionInput(value);\n        setErrors((prevState) => ({...prevState, \n            profileDescriptionErrors: profileDescriptionValidationResult,\n        }));\n    }, [setFormValues, setErrors]);\n\n    const isUserNameInvalid = Object.values(errors.userNameErrors).some(Boolean);\n    const isDescriptionInvalid = Object.values(errors.profileDescriptionErrors).some(Boolean);\n    const isSubmitDisabled = isUserNameInvalid || isDescriptionInvalid;\n \n    return (\n        <PopupWithForm title=\"Редактировать профиль\" name=\"profile\" isOpen={isOpen} onClose={onClose} onSubmit={handleSubmit} >\n        <label className=\"popup__input\">\n          <input className=\"popup__field popup__field_name\" value={formValues.userName} onChange={handleNameChange} type=\"text\" name=\"userName\" placeholder=\"Имя\" />\n          {errors.userNameErrors.required && <span className=\"popup__field-error\">Пожалуйста, заполните поле</span>}\n          {errors.userNameErrors.minLength && <span className=\"popup__field-error\">Минимальная длина имени - 2 символа</span>}\n          {errors.userNameErrors.maxLength && <span className=\"popup__field-error\">Максимальная длина имени - 40 символов</span>}\n        </label>\n\n        <label className=\"popup__input\">\n          <input className=\"popup__field popup__field_description\" value={formValues.profileDescription} onChange={handleDescriptionChange} type=\"text\" name=\"profileDescription\" placeholder=\"О себе\" />\n          {errors.profileDescriptionErrors.required && <span className=\"popup__field-error\">Пожалуйста, заполните поле</span>}\n          {errors.profileDescriptionErrors.minLength && <span className=\"popup__field-error\">Минимальная длина описания - 2 символа</span>}\n          {errors.profileDescriptionErrors.maxLength && <span className=\"popup__field-error\">Максимальная длина описания - 200 символов</span>}\n        </label>\n\n        <button type=\"submit\" disabled={isSubmitDisabled} className=\"popup__submit-button\" onClick={handleSubmit} name=\"Сохранить\">Сохранить</button>\n      </PopupWithForm>\n    );\n\n}\n\nexport default EditProfilePopup;"]},"metadata":{},"sourceType":"module"}