{"ast":null,"code":"var _jsxFileName = \"/Users/alyona/Docs/Praktikum-Projects/mesto-react/src/components/EditProfilePopup.js\";\nimport React, { useCallback } from 'react';\nimport PopupWithForm from './PopupWithForm.js';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js';\n\nfunction EditProfilePopup({\n  isOpen,\n  onClose\n}) {\n  const [name, setName] = React.useState('');\n  const [description, setDescription] = React.useState('');\n  const currentUserData = React.useContext(CurrentUserContext);\n  const handleNameChange = useCallback(e => {\n    setName(e.target.value);\n  }, [setName]);\n  const handleDescriptionChange = useCallback(e => {\n    setDescription(e.target.value);\n  }, [setDescription]);\n  /*     React.useEffect(() => {\n              setName(currentUserData.name);\n              setDescription(currentUserData.about);\n          //добавить очистку полей через return () =>\n        }, [currentUserData]); \n   */\n\n  return /*#__PURE__*/React.createElement(PopupWithForm, {\n    title: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044C\",\n    name: \"profile\",\n    isOpen: isOpen,\n    onClose: onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"popup__input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"popup__field popup__field_name\",\n    onChange: handleNameChange,\n    type: \"text\",\n    name: \"user-name\",\n    minLength: \"2\",\n    maxLength: \"40\",\n    placeholder: \"\\u0418\\u043C\\u044F\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"popup__field-error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"popup__input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"popup__field popup__field_description\",\n    onChange: handleDescriptionChange,\n    type: \"text\",\n    name: \"profile-description\",\n    minLength: \"2\",\n    maxLength: \"200\",\n    placeholder: \"\\u041E \\u0441\\u0435\\u0431\\u0435\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"popup__field-error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"popup__submit-button\",\n    name: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"));\n}\n\nexport default EditProfilePopup;","map":{"version":3,"sources":["/Users/alyona/Docs/Praktikum-Projects/mesto-react/src/components/EditProfilePopup.js"],"names":["React","useCallback","PopupWithForm","CurrentUserContext","EditProfilePopup","isOpen","onClose","name","setName","useState","description","setDescription","currentUserData","useContext","handleNameChange","e","target","value","handleDescriptionChange"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,OAAOC,aAAP,MAA0B,oBAA1B;AACA,SAASC,kBAAT,QAAmC,mCAAnC;;AAEA,SAASC,gBAAT,CAA0B;AAACC,EAAAA,MAAD;AAASC,EAAAA;AAAT,CAA1B,EAA6C;AAEzC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,KAAK,CAACS,QAAN,CAAe,EAAf,CAAxB;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCX,KAAK,CAACS,QAAN,CAAe,EAAf,CAAtC;AACA,QAAMG,eAAe,GAAGZ,KAAK,CAACa,UAAN,CAAiBV,kBAAjB,CAAxB;AAEA,QAAMW,gBAAgB,GAAGb,WAAW,CAAEc,CAAD,IAAO;AACxCP,IAAAA,OAAO,CAACO,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AACH,GAFmC,EAEjC,CAACT,OAAD,CAFiC,CAApC;AAIA,QAAMU,uBAAuB,GAAGjB,WAAW,CAAEc,CAAD,IAAO;AAC/CJ,IAAAA,cAAc,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;AACH,GAF0C,EAExC,CAACN,cAAD,CAFwC,CAA3C;AAMJ;;;;;;;AAMI,sBACI,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAC,2HAArB;AAA6C,IAAA,IAAI,EAAC,SAAlD;AAA4D,IAAA,MAAM,EAAEN,MAApE;AAA4E,IAAA,OAAO,EAAEC,OAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAO,IAAA,SAAS,EAAC,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,SAAS,EAAC,gCAAjB;AAAkD,IAAA,QAAQ,EAAEQ,gBAA5D;AAA8E,IAAA,IAAI,EAAC,MAAnF;AAA0F,IAAA,IAAI,EAAC,WAA/F;AAA2G,IAAA,SAAS,EAAC,GAArH;AAAyH,IAAA,SAAS,EAAC,IAAnI;AAAwI,IAAA,WAAW,EAAC,oBAApJ;AAA0J,IAAA,QAAQ,MAAlK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAM,IAAA,SAAS,EAAC,oBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADA,eAMA;AAAO,IAAA,SAAS,EAAC,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,SAAS,EAAC,uCAAjB;AAAyD,IAAA,QAAQ,EAAEI,uBAAnE;AAA4F,IAAA,IAAI,EAAC,MAAjG;AAAwG,IAAA,IAAI,EAAC,qBAA7G;AAAmI,IAAA,SAAS,EAAC,GAA7I;AAAiJ,IAAA,SAAS,EAAC,KAA3J;AAAiK,IAAA,WAAW,EAAC,iCAA7K;AAAsL,IAAA,QAAQ,MAA9L;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAM,IAAA,SAAS,EAAC,oBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CANA,eAWA;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,sBAAhC;AAAuD,IAAA,IAAI,EAAC,wDAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8DAXA,CADJ;AAgBH;;AAED,eAAed,gBAAf","sourcesContent":["import React, { useCallback } from 'react';\nimport PopupWithForm from './PopupWithForm.js';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js';\n\nfunction EditProfilePopup({isOpen, onClose}) {\n\n    const [name, setName] = React.useState('');\n    const [description, setDescription] = React.useState('');\n    const currentUserData = React.useContext(CurrentUserContext);\n\n    const handleNameChange = useCallback((e) => {\n        setName(e.target.value);\n    }, [setName]);\n\n    const handleDescriptionChange = useCallback((e) => {\n        setDescription(e.target.value);\n    }, [setDescription]);\n\n\n    \n/*     React.useEffect(() => {\n            setName(currentUserData.name);\n            setDescription(currentUserData.about);\n        //добавить очистку полей через return () =>\n      }, [currentUserData]); \n */\n    return (\n        <PopupWithForm title=\"Редактировать профиль\" name=\"profile\" isOpen={isOpen} onClose={onClose} >\n        <label className=\"popup__input\">\n          <input className=\"popup__field popup__field_name\" onChange={handleNameChange} type=\"text\" name=\"user-name\" minLength=\"2\" maxLength=\"40\" placeholder=\"Имя\" required />\n          <span className=\"popup__field-error\"></span>\n        </label>\n\n        <label className=\"popup__input\">\n          <input className=\"popup__field popup__field_description\" onChange={handleDescriptionChange} type=\"text\" name=\"profile-description\" minLength=\"2\" maxLength=\"200\" placeholder=\"О себе\" required />\n          <span className=\"popup__field-error\"></span>\n        </label>\n\n        <button type=\"submit\" className=\"popup__submit-button\" name=\"Сохранить\">Сохранить</button>\n      </PopupWithForm>\n    );\n\n}\n\nexport default EditProfilePopup;"]},"metadata":{},"sourceType":"module"}