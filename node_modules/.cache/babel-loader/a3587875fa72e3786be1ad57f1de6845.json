{"ast":null,"code":"import _classCallCheck from\"/Users/alyona/Docs/Praktikum-Projects/mesto-auth/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/alyona/Docs/Praktikum-Projects/mesto-auth/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";var Api=/*#__PURE__*/function(){function Api(_ref){var baseUrl=_ref.baseUrl,headers=_ref.headers;_classCallCheck(this,Api);this.baseUrl=baseUrl;this.headers=headers;}_createClass(Api,[{key:\"getUserData\",value:function getUserData(){var _this=this;return fetch(\"\".concat(this.baseUrl,\"/users/me\"),{headers:this.headers}).then(function(res){return _this._getResponseData(res);});}},{key:\"createCard\",value:function createCard(serverCard){return{src:serverCard.link,alt:serverCard.name,description:serverCard.name,likes:serverCard.likes,likesAmount:serverCard.likes.length,id:serverCard._id,ownerId:serverCard.owner._id};}},{key:\"getInitialCards\",value:function getInitialCards(){var _this2=this;return fetch(\"\".concat(this.baseUrl,\"/cards\"),{headers:this.headers}).then(function(res){return _this2._getResponseData(res);});}},{key:\"editProfile\",value:function editProfile(formValues){var _this3=this;return fetch(\"\".concat(this.baseUrl,\"/users/me\"),{method:'PATCH',headers:this.headers,body:JSON.stringify({name:formValues.name,about:formValues.about})}).then(function(res){return _this3._getResponseData(res);});}},{key:\"addNewCard\",value:function addNewCard(pictureLink,pictureDescription){var _this4=this;return fetch(\"\".concat(this.baseUrl,\"/cards\"),{method:'POST',headers:this.headers,body:JSON.stringify({link:pictureLink,name:pictureDescription})}).then(function(res){return _this4._getResponseData(res);});}},{key:\"deleteCard\",value:function deleteCard(cardId){var _this5=this;return fetch(\"\".concat(this.baseUrl,\"/cards/\").concat(cardId),{method:'DELETE',headers:this.headers}).then(function(res){return _this5._getResponseData(res);});}},{key:\"changeLikeCardStatus\",value:function changeLikeCardStatus(cardId,isLiked){var _this6=this;if(!isLiked){return fetch(\"\".concat(this.baseUrl,\"/cards/likes/\").concat(cardId),{method:'PUT',headers:this.headers}).then(function(res){return _this6._getResponseData(res);});}else{return fetch(\"\".concat(this.baseUrl,\"/cards/likes/\").concat(cardId),{method:'DELETE',headers:this.headers}).then(function(res){return _this6._getResponseData(res);});}}},{key:\"changeAvatar\",value:function changeAvatar(avatarLink){var _this7=this;return fetch(\"\".concat(this.baseUrl,\"/users/me/avatar\"),{method:'PATCH',headers:this.headers,body:JSON.stringify({avatar:avatarLink})}).then(function(res){return _this7._getResponseData(res);});}},{key:\"_getResponseData\",value:function _getResponseData(res){if(res.ok){return res.json();}return Promise.reject(new Error(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(res.status)));}},{key:\"loadAppInfo\",value:function loadAppInfo(){return Promise.all([this.getInitialCards(),this.getUserData()]);}}]);return Api;}();export var api=new Api({baseUrl:'https://mesto.nomoreparties.co/v1/cohort-14',headers:{authorization:'281eea5d-a9b0-4240-a494-1ec91d19957f','Content-Type':'application/json'}});","map":{"version":3,"sources":["/Users/alyona/Docs/Praktikum-Projects/mesto-auth/src/utils/Api.js"],"names":["Api","baseUrl","headers","fetch","then","res","_getResponseData","serverCard","src","link","alt","name","description","likes","likesAmount","length","id","_id","ownerId","owner","formValues","method","body","JSON","stringify","about","pictureLink","pictureDescription","cardId","isLiked","avatarLink","avatar","ok","json","Promise","reject","Error","status","all","getInitialCards","getUserData","api","authorization"],"mappings":"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","sourcesContent":["class Api {\n    constructor({ baseUrl, headers }) {\n        this.baseUrl = baseUrl;\n        this.headers = headers;\n    }\n\n    getUserData() {\n        return fetch(`${this.baseUrl}/users/me`, {\n            headers: this.headers,\n        })\n            .then(res => {\n                return this._getResponseData(res);\n            });\n    }\n\n    createCard(serverCard) {\n        return {\n          src: serverCard.link,\n          alt: serverCard.name,\n          description: serverCard.name,\n          likes: serverCard.likes,\n          likesAmount: serverCard.likes.length,\n          id: serverCard._id,\n          ownerId: serverCard.owner._id,\n        }\n      }\n\n    getInitialCards() {\n        return fetch(`${this.baseUrl}/cards`, {\n            headers: this.headers,\n        })\n            .then(res => {\n                return this._getResponseData(res);\n            });\n    }\n\n    editProfile(formValues) {\n        return fetch(`${this.baseUrl}/users/me`, {\n            method: 'PATCH',\n            headers: this.headers,\n            body: JSON.stringify({\n                name: formValues.name,\n                about: formValues.about\n            })\n        })\n            .then(res => {\n                return this._getResponseData(res);\n            });\n    }\n\n    addNewCard(pictureLink, pictureDescription) {\n        return fetch(`${this.baseUrl}/cards`, {\n            method: 'POST',\n            headers: this.headers,\n            body: JSON.stringify({\n                link: pictureLink,\n                name: pictureDescription\n            })\n        })\n            .then(res => {\n                return this._getResponseData(res);\n            });\n    }\n\n    deleteCard(cardId) {\n        return fetch(`${this.baseUrl}/cards/${cardId}`, {\n            method: 'DELETE',\n            headers: this.headers,\n        })\n            .then(res => {\n                return this._getResponseData(res);\n            });\n    }\n\n    changeLikeCardStatus(cardId, isLiked) {\n        if (!isLiked) {\n            return fetch(`${this.baseUrl}/cards/likes/${cardId}`, {\n                method: 'PUT',\n                headers: this.headers,\n            })\n                .then(res => {\n                    return this._getResponseData(res);\n                });\n        }\n        else {\n            return fetch(`${this.baseUrl}/cards/likes/${cardId}`, {\n                method: 'DELETE',\n                headers: this.headers,\n            })\n                .then(res => {\n                    return this._getResponseData(res);\n                });\n        }\n    }\n\n    changeAvatar(avatarLink) {\n        return fetch(`${this.baseUrl}/users/me/avatar`, {\n            method: 'PATCH',\n            headers: this.headers,\n            body: JSON.stringify({\n                avatar: avatarLink,\n            })\n        })\n            .then(res => {\n                return this._getResponseData(res);\n            });\n    }\n\n    _getResponseData(res){\n        if (res.ok) {\n            return res.json();\n        }\n\n        return Promise.reject(new Error(`Ошибка: ${res.status}`));\n    }\n\n    loadAppInfo() {\n        return Promise.all([this.getInitialCards(), this.getUserData()]);\n      }\n\n}\n\nexport const api = new Api({\n    baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-14',\n    headers: {\n        authorization: '281eea5d-a9b0-4240-a494-1ec91d19957f',\n        'Content-Type': 'application/json'\n    }\n});"]},"metadata":{},"sourceType":"module"}