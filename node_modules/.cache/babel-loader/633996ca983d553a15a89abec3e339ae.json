{"ast":null,"code":"var _jsxFileName = \"/Users/alyona/Docs/Praktikum-Projects/mesto-auth/src/components/ProtectedRoute.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Route, Redirect, useHistory } from \"react-router-dom\";\nimport { ROUTES_MAP } from '../utils/routesMap';\n\nconst ProtectedRoute = ({\n  component: Component,\n  ...props\n}) => {\n  _s();\n\n  const history = useHistory();\n  return /*#__PURE__*/React.createElement(Route, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }, props.isUserLoggedIn ? /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 32\n    }\n  })) : history.push(ROUTES_MAP.MAIN));\n};\n\n_s(ProtectedRoute, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n  return [useHistory];\n});\n\n_c = ProtectedRoute;\nexport default ProtectedRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"sources":["/Users/alyona/Docs/Praktikum-Projects/mesto-auth/src/components/ProtectedRoute.js"],"names":["React","Route","Redirect","useHistory","ROUTES_MAP","ProtectedRoute","component","Component","props","history","isUserLoggedIn","push","MAIN"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,kBAA5C;AACA,SAASC,UAAT,QAA2B,oBAA3B;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAD,KAAyC;AAAA;;AAE9D,QAAMC,OAAO,GAAGN,UAAU,EAA1B;AACA,sBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIK,KAAK,CAACE,cAAN,gBAAuB,oBAAC,SAAD,oBAAeF,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAvB,GAAkDC,OAAO,CAACE,IAAR,CAAaP,UAAU,CAACQ,IAAxB,CAFtD,CADF;AAMA,CATF;;GAAMP,c;UAEYF,U;;;KAFZE,c;AAWN,eAAeA,cAAf","sourcesContent":["import React from 'react';\nimport { Route, Redirect, useHistory } from \"react-router-dom\";\nimport { ROUTES_MAP } from '../utils/routesMap';\n\nconst ProtectedRoute = ({ component: Component, ...props  }) => {\n\n  const history = useHistory();\n  return (\n    <Route>\n      {\n        props.isUserLoggedIn ? <Component {...props} /> : history.push(ROUTES_MAP.MAIN)\n      }\n    </Route>\n)}\n\nexport default ProtectedRoute; "]},"metadata":{},"sourceType":"module"}