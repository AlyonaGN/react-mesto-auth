{"ast":null,"code":"var _jsxFileName = \"/Users/alyona/Docs/Praktikum-Projects/mesto-react/src/components/Main.js\";\nimport React, { useCallback } from 'react';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js';\nimport { api } from '../utils/Api.js';\nimport Card from './Card.js';\n\nfunction Main(props) {\n  const [cards, setCards] = React.useState([]);\n  const currentUserData = React.useContext(CurrentUserContext);\n  React.useEffect(() => {\n    api.getInitialCards().then(initialCards => {\n      const cardsFromServer = initialCards.map(card => ({\n        src: card.link,\n        alt: card.name,\n        description: card.name,\n        likes: card.likes,\n        likesAmount: card.likes.length,\n        id: card._id,\n        ownerId: card.owner._id\n      }));\n      setCards(cardsFromServer);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []);\n  const handleCardLike = useCallback(card => {\n    const isLiked = card.likes.some(i => i._id === currentUserData._id);\n    api.changeLikeCardStatus(card.id, isLiked).then(newCard => {\n      const newCards = cards.map(c => c._id === card.id ? newCard : c);\n      setCards(newCards);\n    });\n  }, [cards]);\n\n  if (currentUserData) {\n    return /*#__PURE__*/React.createElement(\"main\", {\n      className: \"content-container page__content-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"section\", {\n      className: \"profile content-container__profile\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"profile__avatar-overlay\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"profile__avatar\",\n      alt: \"\\u0437\\u0434\\u0435\\u0441\\u044C \\u0434\\u043E\\u043B\\u0436\\u043D\\u043E \\u0431\\u044B\\u0442\\u044C \\u0444\\u043E\\u0442\\u043E \\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044F, \\u043D\\u043E \\u0447\\u0442\\u043E-\\u0442\\u043E \\u043F\\u043E\\u0448\\u043B\\u043E \\u043D\\u0435 \\u0442\\u0430\\u043A\",\n      src: currentUserData.avatar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"profile__avatar-change-button\",\n      onClick: props.onEditAvatar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"profile__info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"profile__name-and-button-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"profile__name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }\n    }, currentUserData.name), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"profile__edit-button\",\n      onClick: props.onEditProfile,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"profile__description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 15\n      }\n    }, currentUserData.about)), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"profile__add-button\",\n      onClick: props.onAddPlace,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"section\", {\n      className: \"photo-cards\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"photo-cards__list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }, cards.map(card => /*#__PURE__*/React.createElement(Card, {\n      key: card.id,\n      card: card,\n      onCardClick: props.onCardClick,\n      onCardLike: handleCardLike,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 34\n      }\n    })))));\n  } else {\n    return null;\n  }\n}\n\nexport default Main;","map":{"version":3,"sources":["/Users/alyona/Docs/Praktikum-Projects/mesto-react/src/components/Main.js"],"names":["React","useCallback","CurrentUserContext","api","Card","Main","props","cards","setCards","useState","currentUserData","useContext","useEffect","getInitialCards","then","initialCards","cardsFromServer","map","card","src","link","alt","name","description","likes","likesAmount","length","id","_id","ownerId","owner","catch","error","console","log","handleCardLike","isLiked","some","i","changeLikeCardStatus","newCard","newCards","c","avatar","onEditAvatar","onEditProfile","about","onAddPlace","onCardClick"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,SAASC,kBAAT,QAAmC,mCAAnC;AACA,SAASC,GAAT,QAAoB,iBAApB;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AACnB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,KAAK,CAACS,QAAN,CAAe,EAAf,CAA1B;AACA,QAAMC,eAAe,GAAGV,KAAK,CAACW,UAAN,CAAiBT,kBAAjB,CAAxB;AAEAF,EAAAA,KAAK,CAACY,SAAN,CAAgB,MAAM;AACpBT,IAAAA,GAAG,CAACU,eAAJ,GACGC,IADH,CACSC,YAAD,IAAkB;AACtB,YAAMC,eAAe,GAAGD,YAAY,CAACE,GAAb,CAAiBC,IAAI,KAAK;AAChDC,QAAAA,GAAG,EAAED,IAAI,CAACE,IADsC;AAEhDC,QAAAA,GAAG,EAAEH,IAAI,CAACI,IAFsC;AAGhDC,QAAAA,WAAW,EAAEL,IAAI,CAACI,IAH8B;AAIhDE,QAAAA,KAAK,EAAEN,IAAI,CAACM,KAJoC;AAKhDC,QAAAA,WAAW,EAAEP,IAAI,CAACM,KAAL,CAAWE,MALwB;AAMhDC,QAAAA,EAAE,EAAET,IAAI,CAACU,GANuC;AAOhDC,QAAAA,OAAO,EAAEX,IAAI,CAACY,KAAL,CAAWF;AAP4B,OAAL,CAArB,CAAxB;AASApB,MAAAA,QAAQ,CAACQ,eAAD,CAAR;AAED,KAbH,EAcGe,KAdH,CAcUC,KAAD,IAAW;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KAhBH;AAiBD,GAlBD,EAkBG,EAlBH;AAoBA,QAAMG,cAAc,GAAGlC,WAAW,CAAEiB,IAAD,IAAU;AAC3C,UAAMkB,OAAO,GAAGlB,IAAI,CAACM,KAAL,CAAWa,IAAX,CAAgBC,CAAC,IAAIA,CAAC,CAACV,GAAF,KAAUlB,eAAe,CAACkB,GAA/C,CAAhB;AAEAzB,IAAAA,GAAG,CAACoC,oBAAJ,CAAyBrB,IAAI,CAACS,EAA9B,EAAkCS,OAAlC,EAA2CtB,IAA3C,CAAiD0B,OAAD,IAAa;AAC3D,YAAMC,QAAQ,GAAGlC,KAAK,CAACU,GAAN,CAAWyB,CAAD,IAAOA,CAAC,CAACd,GAAF,KAAUV,IAAI,CAACS,EAAf,GAAoBa,OAApB,GAA8BE,CAA/C,CAAjB;AACAlC,MAAAA,QAAQ,CAACiC,QAAD,CAAR;AACD,KAHD;AAID,GAPiC,EAO/B,CAAClC,KAAD,CAP+B,CAAlC;;AASA,MAAIG,eAAJ,EAAqB;AACnB,wBACE;AAAM,MAAA,SAAS,EAAC,2CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAS,MAAA,SAAS,EAAC,oCAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAiC,MAAA,GAAG,EAAC,+QAArC;AAA8F,MAAA,GAAG,EAAEA,eAAe,CAACiC,MAAnH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,+BAAhC;AAAgE,MAAA,OAAO,EAAErC,KAAK,CAACsC,YAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAFF,eAOE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,oCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,MAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+BlC,eAAe,CAACY,IAA/C,CADF,eAEE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,sBAAhC;AAAuD,MAAA,OAAO,EAAEhB,KAAK,CAACuC,aAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,eAKE;AAAG,MAAA,SAAS,EAAC,sBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqCnC,eAAe,CAACoC,KAArD,CALF,CAPF,eAeE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,qBAAhC;AAAsD,MAAA,OAAO,EAAExC,KAAK,CAACyC,UAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfF,CADJ,eAoBI;AAAS,MAAA,SAAS,EAAC,aAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE;AAAI,MAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGxC,KAAK,CAACU,GAAN,CAAUC,IAAI,iBAAI,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAEA,IAAI,CAACS,EAAhB;AAAoB,MAAA,IAAI,EAAET,IAA1B;AAAgC,MAAA,WAAW,EAAEZ,KAAK,CAAC0C,WAAnD;AAAgE,MAAA,UAAU,EAAEb,cAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAlB,CADH,CAFF,CApBJ,CADF;AA8BD,GA/BD,MAgCK;AACH,WAAO,IAAP;AACD;AAGF;;AAED,eAAe9B,IAAf","sourcesContent":["import React, { useCallback } from 'react';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js';\nimport { api } from '../utils/Api.js';\nimport Card from './Card.js';\n\nfunction Main(props) {\n  const [cards, setCards] = React.useState([]);\n  const currentUserData = React.useContext(CurrentUserContext);\n\n  React.useEffect(() => {\n    api.getInitialCards()\n      .then((initialCards) => {\n        const cardsFromServer = initialCards.map(card => ({\n          src: card.link,\n          alt: card.name,\n          description: card.name,\n          likes: card.likes,\n          likesAmount: card.likes.length,\n          id: card._id,\n          ownerId: card.owner._id,\n        }))\n        setCards(cardsFromServer);\n\n      })\n      .catch((error) => {\n        console.log(error);\n      })\n  }, []);\n  \n  const handleCardLike = useCallback((card) => {\n    const isLiked = card.likes.some(i => i._id === currentUserData._id);\n    \n    api.changeLikeCardStatus(card.id, isLiked).then((newCard) => {\n      const newCards = cards.map((c) => c._id === card.id ? newCard : c);\n      setCards(newCards);\n    });\n  }, [cards]);\n\n  if (currentUserData) {\n    return (\n      <main className=\"content-container page__content-container\">\n          <section className=\"profile content-container__profile\">\n            \n            <div className=\"profile__avatar-overlay\">\n              <img className=\"profile__avatar\" alt=\"здесь должно быть фото профиля, но что-то пошло не так\" src={currentUserData.avatar}/>\n              <button type=\"button\" className=\"profile__avatar-change-button\" onClick={props.onEditAvatar}></button>\n            </div>\n            \n            <div className=\"profile__info\">\n              <div className=\"profile__name-and-button-container\">\n                <h1 className=\"profile__name\">{currentUserData.name}</h1>\n                <button type=\"button\" className=\"profile__edit-button\" onClick={props.onEditProfile}></button>\n              </div>\n              <p className=\"profile__description\">{currentUserData.about}</p>\n            </div>\n            \n            <button type=\"button\" className=\"profile__add-button\" onClick={props.onAddPlace}></button>\n          \n          </section>\n  \n          <section className=\"photo-cards\">\n            \n            <ul className=\"photo-cards__list\">\n              {cards.map(card => <Card key={card.id} card={card} onCardClick={props.onCardClick} onCardLike={handleCardLike} />)}\n            </ul>\n            \n          </section>\n        </main>\n    );\n  }\n  else {\n    return null\n  }\n  \n  \n}\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}