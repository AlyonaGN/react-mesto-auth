{"ast":null,"code":"var _jsxFileName = \"/Users/alyona/Docs/Praktikum-Projects/mesto-auth/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback } from 'react';\nimport { Route, Redirect, Switch, useHistory } from 'react-router-dom';\nimport Header from './Header.js';\nimport Main from './Main.js';\nimport Footer from './Footer.js';\nimport { api } from '../utils/Api.js';\nimport '../index.css';\nimport DeleteCardPopup from './DeleteCardPopup.js';\nimport EditProfilePopup from './EditProfilePopup.js';\nimport EditAvatarPopup from './EditAvatarPopup.js';\nimport AddPlacePopup from './AddPlacePopup.js';\nimport ProtectedRoute from './ProtectedRoute.js';\nimport Login from './Login.js';\nimport Register from './Register.js';\nimport RegistrationResultsPopup from './RegistrationResultsPopup.js';\nimport ImagePopup from './ImagePopup.js';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js';\nimport { ROUTES_MAP } from '../utils/routesMap.js';\n\nfunction App() {\n  _s();\n\n  const [isEditProfilePopupOpen, setEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = React.useState(false);\n  const [isDeleteCardPopupOpen, setIsDeleteCardPopupOpen] = React.useState(false);\n  const [cardToBeDeleted, setCardToBeDeleted] = React.useState(null);\n  const [selectedCard, setSelectedCard] = React.useState(null);\n  const [currentUser, setUser] = React.useState(null);\n  const [cards, setCards] = React.useState([]);\n  const [loggedIn, setLoggedIn] = React.useState(false);\n  const [isRegistrationPopupOpen, setRegistrationPopupOpen] = React.useState(false);\n  const [isRegistrationSuccessfull, setRegistrationSuccessfull] = React.useState(false);\n  const history = useHistory();\n\n  const MainComponent = function () {\n    return /*#__PURE__*/React.createElement(Main, {\n      onEditProfile: () => setEditProfilePopupOpen(true),\n      onAddPlace: () => setAddPlacePopupOpen(true),\n      onEditAvatar: () => setEditAvatarPopupOpen(true),\n      onCardClick: function handleCardClick(card) {\n        setSelectedCard(card);\n      },\n      cards: cards,\n      onCardLike: handleCardLike,\n      onCardDeleteClick: function handleDeleteCardClick(card) {\n        setIsDeleteCardPopupOpen(true);\n        prepareCardForDeletion(card);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }\n    });\n  };\n\n  React.useEffect(() => {\n    api.loadAppInfo().then(([cardsFromServer, userData]) => {\n      const initialCards = cardsFromServer.map(initialCard => {\n        return api.createCard(initialCard);\n      });\n      setCards(initialCards);\n      setUser(userData);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []);\n  const handleCardLike = useCallback(card => {\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    api.changeLikeCardStatus(card.id, isLiked).then(newCard => {\n      newCard = api.createCard(newCard);\n      const newCards = cards.map(c => c.id === card.id ? newCard : c);\n      setCards(newCards);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, [setCards, cards, currentUser]);\n  const closeAllPopups = useCallback(() => {\n    setEditProfilePopupOpen(false);\n    setAddPlacePopupOpen(false);\n    setEditAvatarPopupOpen(false);\n    setIsDeleteCardPopupOpen(false);\n    setSelectedCard(null);\n    setRegistrationPopupOpen(false);\n  }, [setEditProfilePopupOpen, setAddPlacePopupOpen, setEditAvatarPopupOpen, setIsDeleteCardPopupOpen, setSelectedCard]);\n  const closeSuccessfullRegPopup = useCallback(() => {\n    closeAllPopups();\n\n    if (isRegistrationSuccessfull) {\n      history.push(ROUTES_MAP.SIGNIN);\n    }\n\n    setRegistrationSuccessfull(false);\n  }, [closeAllPopups, history, isRegistrationSuccessfull]);\n  const handleDeleteCard = useCallback(() => {\n    const cardId = cardToBeDeleted.id;\n    api.deleteCard(cardId).then(() => {\n      const cardsWithoutDeletedCard = cards.filter(item => {\n        return item.id !== cardId;\n      });\n      setCards(cardsWithoutDeletedCard);\n    }).then(() => {\n      closeAllPopups();\n    }).catch(error => {\n      alert(error);\n    });\n  }, [closeAllPopups, cardToBeDeleted, cards]);\n  const handleAddCard = useCallback(newCardData => {\n    api.addNewCard(newCardData.link, newCardData.photoDescription).then(newCard => {\n      newCard = api.createCard(newCard);\n      setCards([newCard, ...cards]);\n      closeAllPopups();\n    }).catch(error => {\n      console.log(error);\n    });\n  }, [cards, closeAllPopups]);\n  const handleUpdateUser = useCallback(formValues => {\n    api.editProfile(formValues).then(res => {\n      setUser(res);\n      closeAllPopups();\n    }).catch(error => {\n      console.log(error);\n    });\n  }, [closeAllPopups]);\n  const handleUpdateAvatar = useCallback(avatarObject => {\n    api.changeAvatar(avatarObject.avatar).then(updatedUserData => {\n      setUser(updatedUserData);\n      closeAllPopups();\n    }).catch(error => {\n      console.log(error);\n    });\n  }, [closeAllPopups]);\n  const prepareCardForDeletion = useCallback(card => {\n    setCardToBeDeleted(card);\n  }, [setCardToBeDeleted]);\n  return /*#__PURE__*/React.createElement(CurrentUserContext.Provider, {\n    value: currentUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: ROUTES_MAP.SIGNUP,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Register, {\n    onClose: closeAllPopups,\n    onSubmitRegister: () => setRegistrationPopupOpen(true),\n    setRegSuccessfull: () => setRegistrationSuccessfull(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    path: ROUTES_MAP.SIGNIN,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Login, {\n    handleLogin: function handleLogin() {\n      setLoggedIn(true);\n      history.push(ROUTES_MAP.MAIN);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(ProtectedRoute, {\n    path: ROUTES_MAP.MAIN,\n    isUserLoggedIn: loggedIn,\n    component: MainComponent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }\n  }), isEditProfilePopupOpen && /*#__PURE__*/React.createElement(EditProfilePopup, {\n    isOpen: isEditProfilePopupOpen,\n    onClose: closeAllPopups,\n    onUpdateUser: handleUpdateUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 36\n    }\n  }), /*#__PURE__*/React.createElement(DeleteCardPopup, {\n    isOpen: isDeleteCardPopupOpen,\n    onClose: closeAllPopups,\n    onDeletionConfirm: handleDeleteCard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 9\n    }\n  }), isAddPlacePopupOpen && /*#__PURE__*/React.createElement(AddPlacePopup, {\n    isOpen: isAddPlacePopupOpen,\n    onClose: closeAllPopups,\n    onAddCard: handleAddCard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 33\n    }\n  }), isEditAvatarPopupOpen && /*#__PURE__*/React.createElement(EditAvatarPopup, {\n    isOpen: isEditAvatarPopupOpen,\n    onClose: closeAllPopups,\n    onUpdateAvatar: handleUpdateAvatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 35\n    }\n  }), isRegistrationPopupOpen && /*#__PURE__*/React.createElement(RegistrationResultsPopup, {\n    onClose: closeSuccessfullRegPopup,\n    isOpen: isRegistrationPopupOpen,\n    isRegSuccessfull: isRegistrationSuccessfull,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(ImagePopup, {\n    name: \"change-avatar\",\n    card: selectedCard,\n    onClose: closeAllPopups,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 9\n    }\n  }));\n}\n\n_s(App, \"5k+Px6NT7iI2Ik4qEGSWR/pG0dY=\", false, function () {\n  return [useHistory];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/alyona/Docs/Praktikum-Projects/mesto-auth/src/components/App.js"],"names":["React","useCallback","Route","Redirect","Switch","useHistory","Header","Main","Footer","api","DeleteCardPopup","EditProfilePopup","EditAvatarPopup","AddPlacePopup","ProtectedRoute","Login","Register","RegistrationResultsPopup","ImagePopup","CurrentUserContext","ROUTES_MAP","App","isEditProfilePopupOpen","setEditProfilePopupOpen","useState","isAddPlacePopupOpen","setAddPlacePopupOpen","isEditAvatarPopupOpen","setEditAvatarPopupOpen","isDeleteCardPopupOpen","setIsDeleteCardPopupOpen","cardToBeDeleted","setCardToBeDeleted","selectedCard","setSelectedCard","currentUser","setUser","cards","setCards","loggedIn","setLoggedIn","isRegistrationPopupOpen","setRegistrationPopupOpen","isRegistrationSuccessfull","setRegistrationSuccessfull","history","MainComponent","handleCardClick","card","handleCardLike","handleDeleteCardClick","prepareCardForDeletion","useEffect","loadAppInfo","then","cardsFromServer","userData","initialCards","map","initialCard","createCard","catch","error","console","log","isLiked","likes","some","i","_id","changeLikeCardStatus","id","newCard","newCards","c","closeAllPopups","closeSuccessfullRegPopup","push","SIGNIN","handleDeleteCard","cardId","deleteCard","cardsWithoutDeletedCard","filter","item","alert","handleAddCard","newCardData","addNewCard","link","photoDescription","handleUpdateUser","formValues","editProfile","res","handleUpdateAvatar","avatarObject","changeAvatar","avatar","updatedUserData","SIGNUP","handleLogin","MAIN"],"mappings":"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","sourcesContent":["import React, { useCallback } from 'react';\nimport { Route, Redirect, Switch, useHistory } from 'react-router-dom';\nimport Header from './Header.js';\nimport Main from './Main.js';\nimport Footer from './Footer.js';\nimport { api } from '../utils/Api.js';\nimport '../index.css';\nimport DeleteCardPopup from './DeleteCardPopup.js';\nimport EditProfilePopup from './EditProfilePopup.js';\nimport EditAvatarPopup from './EditAvatarPopup.js';\nimport AddPlacePopup from './AddPlacePopup.js';\nimport ProtectedRoute from './ProtectedRoute.js';\nimport Login from './Login.js';\nimport Register from './Register.js';\nimport RegistrationResultsPopup from './RegistrationResultsPopup.js';\nimport ImagePopup from './ImagePopup.js';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js';\nimport { ROUTES_MAP } from '../utils/routesMap.js';\n\nfunction App() {\n\n  const [isEditProfilePopupOpen, setEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = React.useState(false);\n  const [isDeleteCardPopupOpen, setIsDeleteCardPopupOpen] = React.useState(false);\n  const [cardToBeDeleted, setCardToBeDeleted] = React.useState(null);\n  const [selectedCard, setSelectedCard] = React.useState(null);\n  const [currentUser, setUser] = React.useState(null);\n  const [cards, setCards] = React.useState([]);\n  const [loggedIn, setLoggedIn] = React.useState(false);\n  const [isRegistrationPopupOpen, setRegistrationPopupOpen] = React.useState(false);\n  const [isRegistrationSuccessfull, setRegistrationSuccessfull] = React.useState(false);\n  const history = useHistory();\n\n  const MainComponent = function() {\n    return (\n      <Main \n        onEditProfile={() => setEditProfilePopupOpen(true)}\n        onAddPlace={() => setAddPlacePopupOpen(true)}\n        onEditAvatar={() => setEditAvatarPopupOpen(true)}\n        onCardClick={function handleCardClick(card) {\n          setSelectedCard(card);\n        }}\n        cards={cards}\n        onCardLike={handleCardLike}\n        onCardDeleteClick={function handleDeleteCardClick(card) {\n          setIsDeleteCardPopupOpen(true);\n          prepareCardForDeletion(card);\n        }} \n    />  \n    )\n  }\n\n  React.useEffect(() => {\n    api.loadAppInfo()\n      .then(([cardsFromServer, userData]) => {\n        const initialCards = cardsFromServer.map((initialCard) => {\n          return api.createCard(initialCard);\n        })\n        setCards(initialCards);\n        setUser(userData);\n      })\n      .catch((error) => {\n        console.log(error);\n      })\n  }, []);\n\n  const handleCardLike = useCallback((card) => {\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n\n    api.changeLikeCardStatus(card.id, isLiked)\n      .then((newCard) => {\n        newCard = api.createCard(newCard);\n        const newCards = cards.map((c) => c.id === card.id ? newCard : c);\n        setCards(newCards);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }, [setCards, cards, currentUser]);\n\n  const closeAllPopups = useCallback(() => {\n    setEditProfilePopupOpen(false);\n    setAddPlacePopupOpen(false);\n    setEditAvatarPopupOpen(false);\n    setIsDeleteCardPopupOpen(false);\n    setSelectedCard(null);\n    setRegistrationPopupOpen(false);\n  }, [setEditProfilePopupOpen, setAddPlacePopupOpen, setEditAvatarPopupOpen, setIsDeleteCardPopupOpen, setSelectedCard]);\n\n  const closeSuccessfullRegPopup = useCallback(() => {\n    closeAllPopups();\n    if (isRegistrationSuccessfull){\n      history.push(ROUTES_MAP.SIGNIN);\n    }\n    setRegistrationSuccessfull(false);\n  }, [closeAllPopups, history, isRegistrationSuccessfull]);\n  \n  const handleDeleteCard = useCallback(() => {\n    const cardId = cardToBeDeleted.id;\n    api.deleteCard(cardId)\n      .then(() => {\n        const cardsWithoutDeletedCard = cards.filter((item) => {\n          return item.id !== cardId;\n        })\n        setCards(cardsWithoutDeletedCard);\n      })\n      .then(() => {\n        closeAllPopups();\n      })\n      .catch((error) => {\n        alert(error);\n      });\n  }, [closeAllPopups, cardToBeDeleted, cards]);\n\n  const handleAddCard = useCallback((newCardData) => {\n    api.addNewCard(newCardData.link, newCardData.photoDescription)\n      .then((newCard) => {\n        newCard = api.createCard(newCard);\n        setCards([newCard, ...cards]);\n        closeAllPopups();\n      })\n      .catch((error) => {\n        console.log(error);\n      })\n  }, [cards, closeAllPopups]);\n\n  const handleUpdateUser = useCallback((formValues) => {\n    api.editProfile(formValues)\n      .then((res) => {\n        setUser(res);\n        closeAllPopups();\n      })\n      .catch((error) => {\n        console.log(error);\n      })\n  }, [closeAllPopups]);\n\n  const handleUpdateAvatar = useCallback((avatarObject) => {\n    api.changeAvatar(avatarObject.avatar)\n      .then((updatedUserData) => {\n        setUser(updatedUserData);\n        closeAllPopups();\n      })\n      .catch((error) => {\n        console.log(error);\n      })\n  }, [closeAllPopups]);\n\n  const prepareCardForDeletion = useCallback((card) => {\n    setCardToBeDeleted(card);\n  }, [setCardToBeDeleted]);\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n        <Header />\n        <Switch>\n          <Route path={ROUTES_MAP.SIGNUP}>\n            <Register onClose={closeAllPopups} onSubmitRegister={() => setRegistrationPopupOpen(true)} setRegSuccessfull={() => setRegistrationSuccessfull(true)}/>\n          </Route>\n          <Route path={ROUTES_MAP.SIGNIN}>\n            <Login handleLogin={function handleLogin() {\n                  setLoggedIn(true);\n                  history.push(ROUTES_MAP.MAIN);\n                }}/>\n          </Route>\n          <ProtectedRoute path={ROUTES_MAP.MAIN} isUserLoggedIn={loggedIn} component={MainComponent}/>\n        </Switch>\n        <Footer />\n\n        {isEditProfilePopupOpen && <EditProfilePopup isOpen={isEditProfilePopupOpen} onClose={closeAllPopups} onUpdateUser={handleUpdateUser} />}\n\n        <DeleteCardPopup isOpen={isDeleteCardPopupOpen} onClose={closeAllPopups} onDeletionConfirm={handleDeleteCard} />\n\n        {isAddPlacePopupOpen && <AddPlacePopup isOpen={isAddPlacePopupOpen} onClose={closeAllPopups} onAddCard={handleAddCard} />}\n\n        {isEditAvatarPopupOpen && <EditAvatarPopup isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups} onUpdateAvatar={handleUpdateAvatar} />}\n\n        {isRegistrationPopupOpen && <RegistrationResultsPopup onClose={closeSuccessfullRegPopup} isOpen={isRegistrationPopupOpen} isRegSuccessfull={isRegistrationSuccessfull} />}\n\n        <ImagePopup name=\"change-avatar\" card={selectedCard} onClose={closeAllPopups} />\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}